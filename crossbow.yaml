watch:
  default:
    before:
      - docker
      - bs --init
    "_src:data:public/img/*":
      - crossbow
      - bs --reload
    scss:
      - crossbow-sass --production

tasks:

  build-all:
    description: Wipe compiled files & re-create HTML/JS/CSS
    tasks:
      - clean
      - build-js
      - build-css
      - icons
      - build-html
      - _merkle

  build-css:
    - crossbow-sass
    - crossbow-sass --production

  build-js:
    - webpack

  deploy:
    description: Build-all assets & rsync to server
    tasks:
      - build-all
      - rsync
      - docker-remote
      - open

  webpack:
    - '@npm webpack --config webpack-prod.config.js'

  build-html:
    - crossbow --production

  _merkle:
    - merkle --dir public-html
    - merkle --dir public/css
    - merkle --dir public/js

  docker:
    description: Run docker-compose with **dev** config files
    tasks:
      - '@sh docker-compose -f docker-compose-dev.yaml up -d'
      - '@sh docker ps'

  rsync:
    description: Copy files from local to remote server
    tasks:
      - >
        @sh rsync -rav
        public public-html docker-compose.yaml nginx.conf manifest.json
        $AUTH:~/yes.gg --delete

  docker-remote: >
    @sh ssh $AUTH 'cd yes.gg && docker-compose restart'

  open:
    description: Open the live site for previewing
    input: '@sh open http://$DO_IP'

  clean:
    description: Wipe built assets (html/js/css)
    tasks: >
      @sh rm -rf
      public-html/**
      public/js/**
      public/css/core.min.css
      public/css/core.min.css.map

env:
  AUTH: root@178.62.100.243
  DO_IP: 178.62.100.243
  DO_USER: root

options:

  crossbow:

    config:
      base: '_src'
      prettyUrls: true
      defaultLayout: 'default.hbs'

    input:
      - _src/*.hbs
      - _src/services/*.hbs
      - _src/services/photo-booths/*.hbs
    output: 'public-html'

    data:
      $$: "all:data"
      $assets: "file:assets.json"

  bs:
    proxy: 0.0.0.0:8080

  crossbow-sass:
    input: scss/core.scss
    output: public/css

  icons:
    input: public/img/svg/**
    output: public/img/icons
